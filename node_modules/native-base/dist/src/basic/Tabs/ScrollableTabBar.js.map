{"version":3,"sources":["../../../../src/basic/Tabs/ScrollableTabBar.js"],"names":["React","require","ReactNative","View","Animated","StyleSheet","ScrollView","Text","Platform","Dimensions","Button","WINDOW_WIDTH","get","width","ScrollableTabBar","createClass","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","scrollOffset","style","tabStyle","tabsContainerStyle","textStyle","renderTab","underlineStyle","onScroll","getDefaultProps","getInitialState","_tabsMeasurements","_leftTabUnderline","Value","_widthTabUnderline","_containerWidth","componentDidMount","props","scrollValue","addListener","updateView","offset","position","Math","floor","value","pageOffset","tabCount","length","lastTabPosition","necessarilyMeasurementsCompleted","updateTabPanel","updateTabUnderline","isLastTab","_tabContainerMeasurements","_containerMeasurements","containerWidth","tabWidth","nextTabMeasurements","nextTabWidth","tabOffset","left","absolutePageOffset","newScrollX","OS","_scrollView","scrollTo","x","y","animated","rightBoundScroll","lineLeft","lineRight","right","nextTabLeft","nextTabRight","newLineLeft","newLineRight","state","setValue","name","page","isTabActive","onPressHandler","onLayoutHandler","textColor","fontWeight","styles","tab","color","measureTab","event","nativeEvent","layout","height","_value","render","tabUnderlineStyle","bottom","dynamicTabUnderline","container","onContainerLayout","scrollView","onTabContainerLayout","map","bind","componentWillReceiveProps","nextProps","JSON","stringify","setState","e","module","exports","create","alignItems","justifyContent","paddingLeft","paddingRight","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","flexDirection"],"mappings":"AAAA,GAAMA,OAAQC,QAAQ,OAAR,CAAd;AACA,GAAMC,aAAcD,QAAQ,cAAR,CAApB,C;;AAEEE,I;;;;;;;AAOED,W,CAPFC,I,CACAC,Q,CAMEF,W,CANFE,Q,CACAC,U,CAKEH,W,CALFG,U,CACAC,U,CAIEJ,W,CAJFI,U,CACAC,I,CAGEL,W,CAHFK,I,CACAC,Q,CAEEN,W,CAFFM,Q,CACAC,U,CACEP,W,CADFO,U;AAEF,GAAMC,QAAST,QAAQ,UAAR,CAAf;;AAEA,GAAMU,cAAeF,WAAWG,GAAX,CAAe,QAAf,EAAyBC,KAA9C;;AAEA,GAAMC,kBAAmBd,MAAMe,WAAN,CAAkB;AACzCC,UAAW;AACTC,SAAUjB,MAAMkB,SAAN,CAAgBC,IADjB;AAETC,UAAWpB,MAAMkB,SAAN,CAAgBG,MAFlB;AAGTC,KAAMtB,MAAMkB,SAAN,CAAgBK,KAHb;AAITC,gBAAiBxB,MAAMkB,SAAN,CAAgBO,MAJxB;AAKTC,gBAAiB1B,MAAMkB,SAAN,CAAgBO,MALxB;AAMTE,kBAAmB3B,MAAMkB,SAAN,CAAgBO,MAN1B;AAOTG,aAAc5B,MAAMkB,SAAN,CAAgBG,MAPrB;AAQTQ,MAAO1B,KAAKa,SAAL,CAAea,KARb;AASTC,SAAU3B,KAAKa,SAAL,CAAea,KAThB;AAUTE,mBAAoB5B,KAAKa,SAAL,CAAea,KAV1B;AAWTG,UAAWzB,KAAKS,SAAL,CAAea,KAXjB;AAYTI,UAAWjC,MAAMkB,SAAN,CAAgBC,IAZlB;AAaTe,eAAgB/B,KAAKa,SAAL,CAAea,KAbtB;AAcTM,SAASnC,MAAMkB,SAAN,CAAgBC,IAdhB,CAD8B;;;AAkBzCiB,eAlByC,2BAkBvB;AAChB,MAAO;AACLR,aAAc,EADT;AAELF,gBAAiB,MAFZ;AAGLC,kBAAmB,OAHd;AAILH,gBAAiB,IAJZ;AAKLK,MAAO,EALF;AAMLC,SAAU,EANL;AAOLC,mBAAoB,EAPf;AAQLG,eAAgB,EARX,CAAP;;AAUD,CA7BwC;;AA+BzCG,eA/ByC,2BA+BvB;AAChB,KAAKC,iBAAL,CAAyB,EAAzB;AACA,MAAO;AACLC,kBAAmB,GAAInC,UAASoC,KAAb,CAAmB,CAAnB,CADd;AAELC,mBAAoB,GAAIrC,UAASoC,KAAb,CAAmB,CAAnB,CAFf;AAGLE,gBAAiB,IAHZ,CAAP;;AAKD,CAtCwC;;AAwCzCC,iBAxCyC,6BAwCrB;AAClB,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,WAAvB,CAAmC,KAAKC,UAAxC;AACD,CA1CwC;;AA4CzCA,UA5CyC,qBA4C9BC,MA5C8B,CA4CtB;AACjB,GAAMC,UAAWC,KAAKC,KAAL,CAAWH,OAAOI,KAAlB,CAAjB;AACA,GAAMC,YAAaL,OAAOI,KAAP,CAAe,CAAlC;AACA,GAAME,UAAW,KAAKV,KAAL,CAAWtB,IAAX,CAAgBiC,MAAjC;AACA,GAAMC,iBAAkBF,SAAW,CAAnC;;AAEA,GAAIA,WAAa,CAAb,EAAkBN,OAAOI,KAAP,CAAe,CAAjC,EAAsCJ,OAAOI,KAAP,CAAeI,eAAzD,CAA0E;AACxE;AACD;;AAED,GAAI,KAAKC,gCAAL,CAAsCR,QAAtC,CAAgDA,WAAaO,eAA7D,CAAJ,CAAmF;AACjF,KAAKE,cAAL,CAAoBT,QAApB,CAA8BI,UAA9B;AACA,KAAKM,kBAAL,CAAwBV,QAAxB,CAAkCI,UAAlC,CAA8CC,QAA9C;AACD;AACF,CA1DwC;;AA4DzCG,gCA5DyC,2CA4DRR,QA5DQ,CA4DEW,SA5DF,CA4Da;AACpD,MAAO,MAAKtB,iBAAL,CAAuBW,QAAvB;AACJW,WAAa,KAAKtB,iBAAL,CAAuBW,SAAW,CAAlC,CADT;AAEL,KAAKY,yBAFA;AAGL,KAAKC,sBAHP;AAID,CAjEwC;;AAmEzCJ,cAnEyC,yBAmE1BT,QAnE0B,CAmEhBI,UAnEgB,CAmEJ;AACnC,GAAMU,gBAAiB,KAAKD,sBAAL,CAA4BjD,KAAnD;AACA,GAAMmD,UAAW,KAAK1B,iBAAL,CAAuBW,QAAvB,EAAiCpC,KAAlD;AACA,GAAMoD,qBAAsB,KAAK3B,iBAAL,CAAuBW,SAAW,CAAlC,CAA5B;AACA,GAAMiB,cAAeD,qBAAuBA,oBAAoBpD,KAA3C,EAAoD,CAAzE;AACA,GAAMsD,WAAY,KAAK7B,iBAAL,CAAuBW,QAAvB,EAAiCmB,IAAnD;AACA,GAAMC,oBAAqBhB,WAAaW,QAAxC;AACA,GAAIM,YAAaH,UAAYE,kBAA7B;;;AAGAC,YAAc,CAACP,eAAiB,CAAC,EAAIV,UAAL,EAAmBW,QAApC,CAA+CX,WAAaa,YAA7D,EAA6E,CAA3F;AACAI,WAAaA,YAAc,CAAd,CAAkBA,UAAlB,CAA+B,CAA5C;;AAEA,GAAI9D,SAAS+D,EAAT,GAAgB,SAApB,CAA+B;AAC7B,KAAKC,WAAL,CAAiBC,QAAjB,CAA0B,CAACC,EAAGJ,UAAJ,CAAgBK,EAAG,CAAnB,CAAsBC,SAAU,KAAhC,CAA1B;AACD,CAFD,IAEO;AACL,GAAMC,kBAAmB,KAAKhB,yBAAL,CAA+BhD,KAA/B,CAAwC,KAAKiD,sBAAL,CAA4BjD,KAA7F;AACAyD,WAAaA,WAAaO,gBAAb,CAAgCA,gBAAhC,CAAmDP,UAAhE;AACA,KAAKE,WAAL,CAAiBC,QAAjB,CAA0B,CAACC,EAAGJ,UAAJ,CAAgBK,EAAG,CAAnB,CAAsBC,SAAU,KAAhC,CAA1B;AACD;;AAEF,CAxFwC;;AA0FzCjB,kBA1FyC,6BA0FtBV,QA1FsB,CA0FZI,UA1FY,CA0FAC,QA1FA,CA0FU;AACjD,GAAMwB,UAAW,KAAKxC,iBAAL,CAAuBW,QAAvB,EAAiCmB,IAAlD;AACA,GAAMW,WAAY,KAAKzC,iBAAL,CAAuBW,QAAvB,EAAiC+B,KAAnD;;AAEA,GAAI/B,SAAWK,SAAW,CAA1B,CAA6B;AAC3B,GAAM2B,aAAc,KAAK3C,iBAAL,CAAuBW,SAAW,CAAlC,EAAqCmB,IAAzD;AACA,GAAMc,cAAe,KAAK5C,iBAAL,CAAuBW,SAAW,CAAlC,EAAqC+B,KAA1D;;AAEA,GAAMG,aAAe9B,WAAa4B,WAAb,CAA2B,CAAC,EAAI5B,UAAL,EAAmByB,QAAnE;AACA,GAAMM,cAAgB/B,WAAa6B,YAAb,CAA4B,CAAC,EAAI7B,UAAL,EAAmB0B,SAArE;;AAEA,KAAKM,KAAL,CAAW9C,iBAAX,CAA6B+C,QAA7B,CAAsCH,WAAtC;AACA,KAAKE,KAAL,CAAW5C,kBAAX,CAA8B6C,QAA9B,CAAuCF,aAAeD,WAAtD;AACD,CATD,IASO;AACL,KAAKE,KAAL,CAAW9C,iBAAX,CAA6B+C,QAA7B,CAAsCR,QAAtC;AACA,KAAKO,KAAL,CAAW5C,kBAAX,CAA8B6C,QAA9B,CAAuCP,UAAYD,QAAnD;AACD;AACF,CA3GwC;;AA6GzC7C,SA7GyC,oBA6G/BsD,IA7G+B,CA6GzBC,IA7GyB,CA6GnBC,WA7GmB,CA6GNC,cA7GM,CA6GUC,eA7GV,CA6G2B;AACP,KAAK/C,KADE,CAC1DlB,eAD0D,QAC1DA,eAD0D,CACzCC,iBADyC,QACzCA,iBADyC,CACtBK,SADsB,QACtBA,SADsB;AAElE,GAAM4D,WAAYH,YAAc/D,eAAd,CAAgCC,iBAAlD;AACA,GAAMkE,YAAaJ,YAAc,MAAd,CAAuB,QAA1C;;AAEA,MAAO,qBAAC,MAAD;AACL,IAAQF,IAAR,KAAgBC,IADX;AAEL,WAAY,IAFP;AAGL,mBAAoBD,IAHf;AAIL,oBAAoB,QAJf;AAKL,QAAS,yBAAMG,gBAAeF,IAAf,CAAN,EALJ;AAML,SAAUG,eANL;;AAQL,oBAAC,IAAD,EAAM,MAAO,CAACG,OAAOC,GAAR,CAAa,KAAKnD,KAAL,CAAWd,QAAxB,CAAb;AACE,oBAAC,IAAD,EAAM,MAAO,CAAC,CAACkE,MAAOJ,SAAR,CAAmBC,qBAAnB,CAAD,CAAmC7D,SAAnC,CAAb;AACGuD,IADH,CADF,CARK,CAAP;;;;AAcD,CAhIwC;;AAkIzCU,UAlIyC,qBAkI9BT,IAlI8B,CAkIxBU,KAlIwB,CAkIjB;AACQA,MAAMC,WAAN,CAAkBC,MAD1B,CACd1B,CADc,uBACdA,CADc,CACX7D,KADW,uBACXA,KADW,CACJwF,MADI,uBACJA,MADI;AAEtB,KAAK/D,iBAAL,CAAuBkD,IAAvB,EAA+B,CAACpB,KAAMM,CAAP,CAAUM,MAAON,EAAI7D,KAArB,CAA4BA,WAA5B,CAAmCwF,aAAnC,CAA/B;AACA,KAAKtD,UAAL,CAAgB,CAACK,MAAO,KAAKR,KAAL,CAAWC,WAAX,CAAuByD,MAA/B,CAAhB;AACD,CAtIwC;;AAwIzCC,MAxIyC,kBAwIhC;AACP,GAAMC,mBAAoB;AACxBvD,SAAU,UADc;AAExBoD,OAAQ,CAFgB;AAGxB7E,gBAAiB,MAHO;AAIxBiF,OAAQ,CAJgB,CAA1B;;;AAOA,GAAMC,qBAAsB;AAC1BtC,KAAM,KAAKiB,KAAL,CAAW9C,iBADS;AAE1B1B,MAAO,KAAKwE,KAAL,CAAW5C,kBAFQ,CAA5B;;;AAKA,MAAO,qBAAC,IAAD;AACL,MAAO,CAACqD,OAAOa,SAAR,CAAmB,CAACnF,gBAAiB,KAAKoB,KAAL,CAAWpB,eAA7B,CAAnB,CAAoE,KAAKoB,KAAL,CAAWf,KAA/E,CADF;AAEL,SAAU,KAAK+E,iBAFV;;AAIL,oBAAC,UAAD;AACE,iCAAkC,KADpC;AAEE,IAAK,aAACC,UAAD,CAAgB,CAAE,MAAKrC,WAAL,CAAmBqC,UAAnB,CAAgC,CAFzD;AAGE,WAAY,IAHd;AAIE,+BAAgC,KAJlC;AAKE,6BAA8B,KALhC;AAME,uBAAwB,IAN1B;AAOE,SAAU,KAAKjE,KAAL,CAAWT,QAPvB;AAQE,QAAS,KARX;AASE,aAAc,KAThB;;AAWE,oBAAC,IAAD;AACE,MAAO,CAAC2D,OAAOxE,IAAR,CAAc,CAACT,MAAO,KAAKwE,KAAL,CAAW3C,eAAnB,CAAd,CAAqD,KAAKE,KAAL,CAAWb,kBAAhE,CADT;AAEE,IAAK,cAFP;AAGE,SAAU,KAAK+E,oBAHjB;;AAKG,KAAKlE,KAAL,CAAWtB,IAAX,CAAgByF,GAAhB,CAAoB,SAACxB,IAAD,CAAOC,IAAP,CAAgB;AACnC,GAAMC,aAAc,MAAK7C,KAAL,CAAWxB,SAAX,GAAyBoE,IAA7C;AACA,GAAMvD,WAAY,MAAKW,KAAL,CAAWX,SAAX,EAAwB,MAAKA,SAA/C;AACA,MAAOA,WAAUsD,IAAV,CAAgBC,IAAhB,CAAsBC,WAAtB,CAAmC,MAAK7C,KAAL,CAAW3B,QAA9C,CAAwD,MAAKgF,UAAL,CAAgBe,IAAhB,OAA2BxB,IAA3B,CAAxD,CAAP;AACD,CAJA,CALH;AAUE,oBAAC,QAAD,CAAU,IAAV,EAAe,MAAO,CAACgB,iBAAD,CAAoBE,mBAApB,CAAyC,KAAK9D,KAAL,CAAWV,cAApD,CAAtB,EAVF,CAXF,CAJK,CAAP;;;;AA6BD,CAlLwC;;AAoLzC+E,yBApLyC,oCAoLfC,SApLe,CAoLJ;;AAEnC,GAAIC,KAAKC,SAAL,CAAe,KAAKxE,KAAL,CAAWtB,IAA1B,IAAoC6F,KAAKC,SAAL,CAAeF,UAAU5F,IAAzB,CAApC,EAAsE,KAAK+D,KAAL,CAAW3C,eAArF,CAAsG;AACpG,KAAK2E,QAAL,CAAc,CAAE3E,gBAAiB,IAAnB,CAAd;AACD;AACF,CAzLwC;;AA2LzCoE,oBA3LyC,+BA2LpBQ,CA3LoB,CA2LjB;AACtB,KAAKzD,yBAAL,CAAiCyD,EAAEnB,WAAF,CAAcC,MAA/C;AACA,GAAIvF,OAAQ,KAAKgD,yBAAL,CAA+BhD,KAA3C;AACA,GAAIA,MAAQF,YAAZ,CAA0B;AACxBE,MAAQF,YAAR;AACD;AACD,KAAK0G,QAAL,CAAc,CAAE3E,gBAAiB7B,KAAnB,CAAd;AACA,KAAKkC,UAAL,CAAgB,CAACK,MAAO,KAAKR,KAAL,CAAWC,WAAX,CAAuByD,MAA/B,CAAhB;AACD,CAnMwC;;AAqMzCM,iBArMyC,4BAqMvBU,CArMuB,CAqMpB;AACnB,KAAKxD,sBAAL,CAA8BwD,EAAEnB,WAAF,CAAcC,MAA5C;AACA,KAAKrD,UAAL,CAAgB,CAACK,MAAO,KAAKR,KAAL,CAAWC,WAAX,CAAuByD,MAA/B,CAAhB;AACD,CAxMwC,CAAlB,CAAzB;;;AA2MAiB,OAAOC,OAAP,CAAiB1G,gBAAjB;;AAEA,GAAMgF,QAASzF,WAAWoH,MAAX,CAAkB;AAC/B1B,IAAK;AACHM,OAAQ,EADL;AAEHqB,WAAY,QAFT;AAGHC,eAAgB,QAHb;AAIHC,YAAa,EAJV;AAKHC,aAAc,EALX,CAD0B;;AAQ/BlB,UAAW;AACTN,OAAQ,EADC;AAETyB,YAAa,CAFJ;AAGTC,eAAgB,CAHP;AAITC,gBAAiB,CAJR;AAKTC,iBAAkB,CALT;AAMTC,YAAa,MANJ,CARoB;;AAgB/B5G,KAAM;AACJ6G,cAAe,KADX;AAEJR,eAAgB,cAFZ,CAhByB,CAAlB,CAAf","file":"ScrollableTabBar.js","sourcesContent":["const React = require('react');\nconst ReactNative = require('react-native');\nconst {\n  View,\n  Animated,\n  StyleSheet,\n  ScrollView,\n  Text,\n  Platform,\n  Dimensions,\n} = ReactNative;\nconst Button = require('./Button');\n\nconst WINDOW_WIDTH = Dimensions.get('window').width;\n\nconst ScrollableTabBar = React.createClass({\n  propTypes: {\n    goToPage: React.PropTypes.func,\n    activeTab: React.PropTypes.number,\n    tabs: React.PropTypes.array,\n    backgroundColor: React.PropTypes.string,\n    activeTextColor: React.PropTypes.string,\n    inactiveTextColor: React.PropTypes.string,\n    scrollOffset: React.PropTypes.number,\n    style: View.propTypes.style,\n    tabStyle: View.propTypes.style,\n    tabsContainerStyle: View.propTypes.style,\n    textStyle: Text.propTypes.style,\n    renderTab: React.PropTypes.func,\n    underlineStyle: View.propTypes.style,\n    onScroll:React.PropTypes.func,\n  },\n\n  getDefaultProps() {\n    return {\n      scrollOffset: 52,\n      activeTextColor: 'navy',\n      inactiveTextColor: 'black',\n      backgroundColor: null,\n      style: {},\n      tabStyle: {},\n      tabsContainerStyle: {},\n      underlineStyle: {},\n    };\n  },\n\n  getInitialState() {\n    this._tabsMeasurements = [];\n    return {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: null,\n    };\n  },\n\n  componentDidMount() {\n    this.props.scrollValue.addListener(this.updateView);\n  },\n\n  updateView(offset) {\n    const position = Math.floor(offset.value);\n    const pageOffset = offset.value % 1;\n    const tabCount = this.props.tabs.length;\n    const lastTabPosition = tabCount - 1;\n\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n      return;\n    }\n\n    if (this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {\n      this.updateTabPanel(position, pageOffset);\n      this.updateTabUnderline(position, pageOffset, tabCount);\n    }\n  },\n\n  necessarilyMeasurementsCompleted(position, isLastTab) {\n    return this._tabsMeasurements[position] &&\n      (isLastTab || this._tabsMeasurements[position + 1]) &&\n      this._tabContainerMeasurements &&\n      this._containerMeasurements;\n  },\n\n  updateTabPanel(position, pageOffset) {\n    const containerWidth = this._containerMeasurements.width;\n    const tabWidth = this._tabsMeasurements[position].width;\n    const nextTabMeasurements = this._tabsMeasurements[position + 1];\n    const nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;\n    const tabOffset = this._tabsMeasurements[position].left;\n    const absolutePageOffset = pageOffset * tabWidth;\n    let newScrollX = tabOffset + absolutePageOffset;\n\n    // center tab and smooth tab change (for when tabWidth changes a lot between two tabs)\n    newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\n\n    if (Platform.OS === 'android') {\n      this._scrollView.scrollTo({x: newScrollX, y: 0, animated: false, });\n    } else {\n      const rightBoundScroll = this._tabContainerMeasurements.width - (this._containerMeasurements.width);\n      newScrollX = newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n      this._scrollView.scrollTo({x: newScrollX, y: 0, animated: false, });\n    }\n\n  },\n\n  updateTabUnderline(position, pageOffset, tabCount) {\n    const lineLeft = this._tabsMeasurements[position].left;\n    const lineRight = this._tabsMeasurements[position].right;\n\n    if (position < tabCount - 1) {\n      const nextTabLeft = this._tabsMeasurements[position + 1].left;\n      const nextTabRight = this._tabsMeasurements[position + 1].right;\n\n      const newLineLeft = (pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft);\n      const newLineRight = (pageOffset * nextTabRight + (1 - pageOffset) * lineRight);\n\n      this.state._leftTabUnderline.setValue(newLineLeft);\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n    } else {\n      this.state._leftTabUnderline.setValue(lineLeft);\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n    }\n  },\n\n  renderTab(name, page, isTabActive, onPressHandler, onLayoutHandler) {\n    const { activeTextColor, inactiveTextColor, textStyle, } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n\n    return <Button\n      key={`${name}_${page}`}\n      accessible={true}\n      accessibilityLabel={name}\n      accessibilityTraits='button'\n      onPress={() => onPressHandler(page)}\n      onLayout={onLayoutHandler}\n    >\n      <View style={[styles.tab, this.props.tabStyle, ]}>\n        <Text style={[{color: textColor, fontWeight, }, textStyle, ]}>\n          {name}\n        </Text>\n      </View>\n    </Button>;\n  },\n\n  measureTab(page, event) {\n    const { x, width, height, } = event.nativeEvent.layout;\n    this._tabsMeasurements[page] = {left: x, right: x + width, width, height, };\n    this.updateView({value: this.props.scrollValue._value, });\n  },\n\n  render() {\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      height: 4,\n      backgroundColor: 'navy',\n      bottom: 0,\n    };\n\n    const dynamicTabUnderline = {\n      left: this.state._leftTabUnderline,\n      width: this.state._widthTabUnderline,\n    };\n\n    return <View\n      style={[styles.container, {backgroundColor: this.props.backgroundColor, }, this.props.style, ]}\n      onLayout={this.onContainerLayout}\n    >\n      <ScrollView\n        automaticallyAdjustContentInsets={false}\n        ref={(scrollView) => { this._scrollView = scrollView; }}\n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        directionalLockEnabled={true}\n        onScroll={this.props.onScroll}\n        bounces={false}\n        scrollsToTop={false}\n      >\n        <View\n          style={[styles.tabs, {width: this.state._containerWidth, }, this.props.tabsContainerStyle, ]}\n          ref={'tabContainer'}\n          onLayout={this.onTabContainerLayout}\n        >\n          {this.props.tabs.map((name, page) => {\n            const isTabActive = this.props.activeTab === page;\n            const renderTab = this.props.renderTab || this.renderTab;\n            return renderTab(name, page, isTabActive, this.props.goToPage, this.measureTab.bind(this, page));\n          })}\n          <Animated.View style={[tabUnderlineStyle, dynamicTabUnderline, this.props.underlineStyle, ]} />\n        </View>\n      </ScrollView>\n    </View>;\n  },\n\n  componentWillReceiveProps(nextProps) {\n    // If the tabs change, force the width of the tabs container to be recalculated\n    if (JSON.stringify(this.props.tabs) !== JSON.stringify(nextProps.tabs) && this.state._containerWidth) {\n      this.setState({ _containerWidth: null, });\n    }\n  },\n\n  onTabContainerLayout(e) {\n    this._tabContainerMeasurements = e.nativeEvent.layout;\n    let width = this._tabContainerMeasurements.width;\n    if (width < WINDOW_WIDTH) {\n      width = WINDOW_WIDTH;\n    }\n    this.setState({ _containerWidth: width, });\n    this.updateView({value: this.props.scrollValue._value, });\n  },\n\n  onContainerLayout(e) {\n    this._containerMeasurements = e.nativeEvent.layout;\n    this.updateView({value: this.props.scrollValue._value, });\n  },\n});\n\nmodule.exports = ScrollableTabBar;\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 49,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingRight: 20,\n  },\n  container: {\n    height: 50,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#ccc',\n  },\n  tabs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n});\n"]}